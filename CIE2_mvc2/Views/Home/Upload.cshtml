@{
    ViewData["Title"] = "Upload PDF";
}
<style>
    /* Center the modal */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.4);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

    /* Modal Content */
    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 8px;
        width: 400px;
        text-align: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    /* Close Button */
    .close {
        cursor: pointer;
        position: absolute;
        top: 10px;
        right: 15px;
        font-size: 20px;
    }

    /* Upload Button */
    .upload-btn {
        background-color: #000000
        color: white;
        padding: 10px 15px;
        border: none;
        cursor: pointer;
        border-radius: 5px;
        margin-top: 10px;
    }

        .upload-btn:hover {
            background-color: #45a049;
        }

    /* Uploaded PDFs Layout */
    .pdf-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 15px;
        margin-top: 20px;
    }

    .pdf-item {
        background: #f9f9f9;
        padding: 10px;
        text-align: center;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .pdf-item a {
            text-decoration: none;
            color: #007BFF;
            font-weight: bold;
        }

            .pdf-item a:hover {
                text-decoration: underline;
            }
.pdf-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 15px;
    margin-top: 20px;
}

.pdf-item {
    background: #f9f9f9;
    padding: 10px;
    text-align: center;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    align-items: center;
}

.pdf-icon {
    width: 50px;
    height: 50px;
    margin-bottom: 10px;
}

.pdf-item a {
    text-decoration: none;
    color: #007BFF;
    font-weight: bold;
}

.pdf-item a:hover {
    text-decoration: underline;
}

</style>

<!-- Upload PDF Button -->
<button id="openModalBtn" class="upload-btn">+ Upload PDF</button>

<!-- Modal Dialog for Uploading -->
<div id="uploadModal" class="modal">
    <div class="modal-content">
        <span id="closeModal" class="close">&times;</span>
        <h2>Upload PDF File</h2>
        <form id="uploadForm">
            <input type="file" id="fileInput" accept=".pdf">
            <button type="submit" class="upload-btn">Upload</button>
        </form>
    </div>
</div>

<!-- Display Uploaded PDFs in Grid with PDF Icons -->
<h3 class="mt-4">Uploaded PDFs</h3>
<div class="pdf-grid">
    @foreach (var fileName in ViewBag.Files as List<string>)
    {
        <div class="pdf-item">
            <img src="~/images/pdf-icon.png" alt="PDF Icon" class="pdf-icon">
            <a href="@Url.Action("PdfViewer", "Home", new { fileName = fileName })">@fileName</a>
            @* <a href="~/uploads/@fileName" target="_blank">@fileName</a> *@
        </div>
    }
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        let modal = document.getElementById("uploadModal");
        let openModalBtn = document.getElementById("openModalBtn");
        let closeModal = document.getElementById("closeModal");

        // Open modal
        openModalBtn.addEventListener("click", function () {
            modal.style.display = "flex";
        });

        // Close modal
        closeModal.addEventListener("click", function () {
            modal.style.display = "none";
        });

        // Close modal on outside click
        window.addEventListener("click", function (event) {
            if (event.target === modal) {
                modal.style.display = "none";
            }
        });

        // AJAX File Upload
        let uploadForm = document.getElementById("uploadForm");
        let fileInput = document.getElementById("fileInput");

        uploadForm.addEventListener("submit", function (event) {
            event.preventDefault();

            let file = fileInput.files[0];
            if (!file) {
                alert("Please select a file!");
                return;
            }

            let formData = new FormData();
            formData.append("file", file);

            fetch("/Home/Upload", {
                method: "POST",
                body: formData
            })
            .then(response => response.text())
            .then(data => {
                alert(data);
                location.reload(); // Refresh page
            })
            .catch(error => {
                alert("Upload failed: " + error.message);
            });
        });
    });
</script>
